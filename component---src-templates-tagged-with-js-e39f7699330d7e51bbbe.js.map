{"version":3,"sources":["webpack:///./src/templates/TaggedWith.js","webpack:///./src/components/post-preview.js"],"names":["TaggedWith","props","pageContext","posts","tag","siteTitle","data","site","siteMetadata","title","location","style","display","marginBottom","rhythm","marginTop","length","to","map","node","frontmatter","fields","slug","date","excerpt","key","tags","pageQuery","PostPreview","boxShadow","color","marginRight","replace","className"],"mappings":"2FAAA,0HA2CeA,UArCI,SAAAC,GAAU,IAAD,EACLA,EAAMC,YAArBC,EADoB,EACpBA,MAAOC,EADa,EACbA,IACPC,EAAYJ,EAAMK,KAAKC,KAAKC,aAAaC,MAC/C,OACE,oCACE,kBAAC,IAAD,CAAQC,SAAUT,EAAMS,SAAUD,MAAOJ,GACvC,uBACEM,MAAO,CACLC,QAAQ,QACRC,aAAcC,YAAO,GACrBC,UAAWD,YAAO,MAGtB,4BAAQX,EAAMa,OAAd,KACmB,IAAjBb,EAAMa,OAAe,OAAS,SADhC,YAEYZ,EAFZ,KAGA,kBAAC,OAAD,CAAMa,GAAG,UAAT,kBAECd,EAAMe,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACEA,EAAKC,YAAYX,OAASU,EAAKE,OAAOC,KACpD,OACE,kBAAC,IAAD,CACEA,KAAMH,EAAKE,OAAOC,KAClBC,KAAMJ,EAAKC,YAAYG,KACvBC,QAASL,EAAKK,QACdf,MAAOU,EAAKC,YAAYX,MACxBgB,IAAKN,EAAKE,OAAOC,KACjBI,KAAMP,EAAKC,YAAYM,UAI7B,gCAQD,IAAMC,EAAS,c,uGCVPC,IA9BK,SAAA3B,GAClB,OACE,yBAAKwB,IAAKxB,EAAMqB,KAAMX,MAAO,CAAEE,aAAcC,YAAO,KAClD,wBACEH,MAAO,CACLE,aAAcC,YAAO,OAGvB,kBAAC,OAAD,CAAMH,MAAO,CAAEkB,UAAU,OAASC,MAAM,WAAcb,GAAIhB,EAAMqB,MAC7DrB,EAAMQ,QAGX,2BAAOE,MAAO,CAAEoB,YAAajB,YAAO,KAAOb,EAAMsB,MACjD,uBAAGZ,MAAO,CAAEE,aAAcC,YAAO,OAAWb,EAAMuB,SAClD,6BACGvB,EAAMyB,MAAQzB,EAAMyB,KAAKV,OAAS,EAAI,SAAW,GACjDf,EAAMyB,KAAKR,KAAI,SAAAd,GAAG,OACjB,kBAAC,OAAD,CACEa,GAAE,SAAWb,EAAI4B,QAAQ,MAAO,KAChCC,UAAU,WACVR,IAAKrB,GAEJA","file":"component---src-templates-tagged-with-js-e39f7699330d7e51bbbe.js","sourcesContent":["import React from 'react'\r\nimport Layout from '../components/Layout'\r\nimport { rhythm, scale } from '../utils/typography'\r\nimport { Link, graphql } from 'gatsby'\r\nimport PostPreview from '../components/post-preview'\r\n\r\nconst TaggedWith = props => {\r\n  let { posts, tag } = props.pageContext\r\n  const siteTitle = props.data.site.siteMetadata.title\r\n  return (\r\n    <>\r\n      <Layout location={props.location} title={siteTitle}>\r\n        <p\r\n          style={{\r\n            display: `block`,\r\n            marginBottom: rhythm(1),\r\n            marginTop: rhythm(1),\r\n          }}\r\n        />\r\n        <h1>{`${posts.length} ${\r\n          posts.length === 1 ? 'post' : 'posts'\r\n        } tagged '${tag}'`}</h1>\r\n        <Link to=\"/tags/\">View all tags?</Link>\r\n\r\n        {posts.map(({ node }) => {\r\n          const title = node.frontmatter.title || node.fields.slug\r\n          return (\r\n            <PostPreview\r\n              slug={node.fields.slug}\r\n              date={node.frontmatter.date}\r\n              excerpt={node.excerpt}\r\n              title={node.frontmatter.title}\r\n              key={node.fields.slug}\r\n              tags={node.frontmatter.tags}\r\n            />\r\n          )\r\n        })}\r\n        <hr />\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaggedWith\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { rhythm, scale } from '../utils/typography'\r\nimport '../templates/blog-post.css'\r\n\r\nconst PostPreview = props => {\r\n  return (\r\n    <div key={props.slug} style={{ marginBottom: rhythm(1) }}>\r\n      <h3\r\n        style={{\r\n          marginBottom: rhythm(1 / 4),\r\n        }}\r\n      >\r\n        <Link style={{ boxShadow: `none`, color: `#d13c57` }} to={props.slug}>\r\n          {props.title}\r\n        </Link>\r\n      </h3>\r\n      <small style={{ marginRight: rhythm(1) }}>{props.date}</small>\r\n      <p style={{ marginBottom: rhythm(1 / 4) }}>{props.excerpt}</p>\r\n      <div>\r\n        {props.tags && props.tags.length > 0 ? 'Tags: ' : ''}\r\n        {props.tags.map(tag => (\r\n          <Link\r\n            to={`/tags/${tag.replace(/\\s/g, '-')}`}\r\n            className=\"category\"\r\n            key={tag}\r\n          >\r\n            {tag}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n  // return <p>Hi</p>\r\n}\r\nexport default PostPreview\r\n"],"sourceRoot":""}